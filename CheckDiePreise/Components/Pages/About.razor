@page "/about"

<PageTitle>About</PageTitle>

<MudPaper Class="pa-4 mb-4" Elevation="1">
    <MudText Typo="Typo.h4">Wie funktioniert das hier?</MudText>
    <MudText Typo="Typo.caption">Und überhaupt: Wozu das ganze?</MudText>
    <MudDivider Class="my-4"/>
    <MudText>
        Erfahre auf dieser Seite alles über die eingesetzten Scraper, über JSONS oder die Technologie hinter dieser Seite.
        Inspiriert wurde diese Seite von <MudLink Href="https://heisse-preise.io/" Target="_blank">heisse-preise.io </MudLink>, die für den österreichischen Markt Analysen durchführt.
    </MudText>
</MudPaper>

<MudExpansionPanels MultiExpansion="true">

    @* Woher kommen die Daten? *@
    <MudExpansionPanel>
        <TitleContent>
            <div class="d-flex">
                <MudIcon Color=Color.Secondary Icon="@Icons.Material.Filled.Info" class="mr-3"></MudIcon>
                <MudText><strong>Woher kommen die Daten?</strong></MudText>
            </div>
        </TitleContent>
        <ChildContent>
            Die Daten und Preise sind frei in den Online-Shops zugänglich. Wenn man z.B. die Seite
            <br />
            <br />
            
                <MudLink Href="https://www.kaufland.de/item/search/?search_value=kartoffel">
                    <code>
                        https://www.kaufland.de/item/search/?search_value=kartoffel
                    </code>
                </MudLink>
            
            <br />
            <br />

            aufruft, erhält man viele Artikel zum Suchwort Kartoffel. 
            <br />Mit automatisierten
            Scripts kann man den Quellcode dieser Website auslesen und die Preise
            auslesen. 
            <br/>
            (Versuch es selbst und lass dir mit einem Rechtsklick auf die Website den
            Seiten-Quellcode anzeigen).

            <br/>
            <br />
            Eine andere Methode ist der Daten-Abruf via <strong>API</strong>.
            Versuch es selbst: Mit dem Link

            <br />
            <br />
            <MudLink Href="https://www.lidl.de/p/api/gridboxes/DE/de/?max=1">
                <code>
                    https://www.lidl.de/p/api/gridboxes/DE/de/?max=1
                </code>
            </MudLink>
            <br />
            <br />

            kannst du dir einen Artikel aus dem LIDL-Onlineshop aufrufen.
            Sieht erstmal kryptisch aus, aber bei genauerem Betrachten entdeckst du den
            Titel, Produktbeschreibungen, den Link zum Produktbild und den Preis.
               
            <br />
            <br />
            All das lesen meine automatisierten Skripte aus und speichern es übersichtlich
            ab - natürlich für mehr als nur ein Produkt.

            <MudDivider Class="my-4"/>
            <MudText Align="Align.End">Du möchtest dir den Code ansehen?</MudText>
            <MudStack Row="true" Reverse="true">
                <MudButton Href="https://github.com/SebastianChristoph/checkdiepreise-blazor" Target="_blank" FullWidth="true" Variant="MudBlazor.Variant.Filled" Color="Color.Secondary">Zur Git-Repo</MudButton>
            </MudStack>
                
        </ChildContent>
    </MudExpansionPanel>

    @* WebScraping? *@
    <MudExpansionPanel>
        <TitleContent>
            <div class="d-flex">
                <MudIcon Color=Color.Secondary Icon ="@Icons.Material.Filled.BugReport" class="mr-3"></MudIcon>
                <MudText><strong>WebScraping</strong></MudText>
            </div>
        </TitleContent>
        <ChildContent>
            Web-Scraping ist eine automatisierte Methode zum Extrahieren von Informationen von Websites. 
            <br />
            Ich nutze dazu Pythons Module:
               
            <code>bs4</code> <code>BeautifulSoup</code> und <code>requests</code>. 
                
            <br/>
            <br />
            Durch den Zugriff auf die APIs oder URLS der Online-Shops ist es möglich, alle möglichen Daten zu erhalten.
            Diese werden in einem Python Script sortiert und am Ende in einer SQLite-Datenbank gespeichert - und das täglich.

            <br />    
            <br/>
            Die Hauptaufgabe von Web-Scraping besteht darin, Daten von Webseiten zu sammeln und in einer strukturierten Form zu speichern, die für weitere Analysen oder Anwendungen verwendet werden kann.

            <MudDivider Class="my-4" />
            <MudText Align="Align.End">Du möchtest dir den Code ansehen?</MudText>
            <MudStack Row="true" Reverse="true">
                <MudButton Href="https://github.com/SebastianChristoph/checkdiepreise-blazor" Target="_blank" FullWidth="true" Variant="MudBlazor.Variant.Filled" Color="Color.Secondary">Zur Git-Repo</MudButton>
            </MudStack>
        </ChildContent>
    </MudExpansionPanel>

    @* TechStack *@
    <MudExpansionPanel>
        <TitleContent>
            <div class="d-flex">
                <MudIcon Color=Color.Secondary Icon="@Icons.Material.Filled.Code" class="mr-3"></MudIcon>
                <MudText><strong>TechStack</strong></MudText>
            </div>
        </TitleContent>
        <ChildContent>
            <strong>WebScraping</strong>
            <MudList T="string">
                <MudListItem Text="Python" SecondaryText="Die Python-Skripte übernehmen die Automatisierung des WebScrapings, die Datenverarbeitung sowie das Speichern der extrahierten Daten in einer SQLite-Datenbank. Die Skripte sind so konzipiert, dass sie skalierbar und effizient mit großen Datenmengen umgehen können. Täglich wird die SQLite-Datenbank via SFTP mit der Azure-Datenbank synchronisiert." Icon="@Icons.Material.Filled.Code" />

                <MudListItem Text="Raspberry Pi" SecondaryText="Die Python-Skripte laufen auf einem Raspberry Pi, der als Low-Cost-Server für die Ausführung der WebScraping-Jobs dient. Der Raspberry Pi bietet eine kosteneffiziente und energiearme Lösung für den Dauerbetrieb von automatisierten Prozessen." Icon="@Icons.Material.Filled.HomeMax" />

                <MudListItem Text="BeautifulSoup" SecondaryText="Für das WebScraping wird primär die Python-Bibliothek BeautifulSoup verwendet, die es ermöglicht, HTML- und XML-Dokumente zu parsen und gezielt Daten auszulesen. BeautifulSoup wird in Kombination mit Requests zur effizienten Datenextraktion verwendet." Icon="@Icons.Material.Filled.ManageSearch" />
            </MudList>
            <br />
            <strong>App</strong>
            <MudList T="string">
                <MudListItem Text="Blazor" SecondaryText="Die Webanwendung verwendet Blazor, ein leistungsstarkes Single-Page-Application-Framework von ASP.NET. Blazor ermöglicht die Implementierung von server- und clientseitiger Logik in C#. Es bietet Echtzeit-Kommunikation und eine optimale Benutzererfahrung durch minimalen Server-Roundtrip." Icon="@Icons.Material.Filled.AutoAwesomeMosaic" />
            </MudList>
            <br />
            <strong>Deployment</strong>
            <MudList T="string">
                <MudListItem Text="Git" SecondaryText="Der Quellcode wird durch Git versionsverwaltet. Mithilfe von GitHub Actions wird ein CI/CD-Prozess implementiert, der eine nahtlose Automatisierung des Deployments auf Azure ermöglicht. Dadurch wird sichergestellt, dass neue Features effizient und kontinuierlich ausgerollt werden können." Icon="@Icons.Material.Filled.AccountTree" />

                <MudListItem Text="Azure" SecondaryText="Die Anwendung wird als Azure WebApp gehostet, was skalierbare Cloud-Ressourcen und eine hohe Verfügbarkeit sicherstellt. Azure WebApps bieten zudem einfache Integration mit anderen Azure-Diensten, was die Skalierbarkeit und Erweiterbarkeit der Anwendung erhöht." Icon="@Icons.Material.Filled.Backup" />
            </MudList>

            <MudDivider Class="my-4" />
            <MudText Align="Align.End">Du möchtest dir den Code ansehen?</MudText>
            <MudStack Row="true" Reverse="true">
                <MudButton Href="https://github.com/SebastianChristoph/checkdiepreise-blazor" Target="_blank" FullWidth="true" Variant="MudBlazor.Variant.Filled" Color="Color.Secondary">Zur Git-Repo</MudButton>
            </MudStack>
        </ChildContent>
    </MudExpansionPanel>


</MudExpansionPanels>


@code {

}
