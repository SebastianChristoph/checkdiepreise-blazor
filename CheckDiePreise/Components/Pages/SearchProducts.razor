@page "/search"
@page "/search/{product}"

@rendermode InteractiveServer
@using CheckDiePreise.Data.Models
@using Radzen
@using Radzen.Blazor

<style>
    .rz-chart svg {
        overflow: visible;
    }
</style>

<MudSnackbarProvider/>

<PageTitle>Produktsuche</PageTitle>
<MudText Typo="Typo.h4">Produktsuche</MudText>

<MudGrid>
    <MudItem sm="8" xs="12">
        <MudTextField Label="Produktname oder Art.Nr." Variant="MudBlazor.Variant.Outlined" @bind-Value="_productName" />
        <MudText Typo="Typo.caption">Tipp: Eine Einzelwort-Suche ergibt bessere Resultate!</MudText>
        <MudDivider Class="mt-8 mb-4"/>
          
        <MudText Typo="Typo.body1">Suche in...</MudText>
        <MudRadioGroup @bind-Value="_searchAll">
                <MudRadio Value="true" Color="Color.Primary">Allen Märkten</MudRadio>
                <MudRadio Value="false" Color="Color.Primary">Ausgewählten Märkten</MudRadio>
        </MudRadioGroup>

        @if (!_searchAll)
        {
            <MudPaper Class="pa-2 ma-2">
                <MudStack Row="true" Style="flex-wrap: wrap;" Spacing="2">

                @foreach (string store in _availableStores)
                {
                    <MudSwitch @bind-Value="_searchStores[store]" Label="@store" Color="Color.Primary" />
                }

                </MudStack>
            </MudPaper>
        }
   

        <MudRadioGroup @bind-Value="_searchTrend">
            <MudRadio Value="@("up")" Color="Color.Primary">Nur Preissteigerungen</MudRadio>
            <MudRadio Value="@("down")" Color="Color.Primary">Nur Preissenkungen</MudRadio>
            <MudRadio Value="@("both")" Color="Color.Primary">Alle Preisänderungen</MudRadio>
        </MudRadioGroup>

    </MudItem>
       
</MudGrid>  
<MudButton class="mt-4" Variant="MudBlazor.Variant.Filled" Color="Color.Secondary" OnClick=" SearchProductChanges">Produkt suchen</MudButton>

@* ---------- SPINNER ----------------------- *@

@if (_isSearching)
{
    <MudGrid>
        <MudItem xs="12">
            <MudPaper Class="d-flex align-center justify-center mud-width-full py-8" Elevation="0">
                <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7" />
            </MudPaper>
        </MudItem>
    </MudGrid>
  
}

@if (_productData is not null)
{
    if (_productData.Count > 0)
    {
        <MudHidden Breakpoint="Breakpoint.Xs" Invert="false">

       
            @* ---------- CHART ----------------------- *@
            @if(_identifierInChart.Count > 0)
            {
                <MudPaper Class="pa-16 ma-2" Elevation="3">

                    <RadzenChart>
                        @foreach (KeyValuePair<string, List<DataItem>> dataset in _chartData)
                        {
                            <RadzenLineSeries Interpolation="@interpolation" Data="@dataset.Value" CategoryProperty="Date" Title="@dataset.Key" LineType="LineType.Solid" ValueProperty="Price">
                                <RadzenMarkers Visible="false" MarkerType="MarkerType.Square" />
                                <RadzenSeriesDataLabels Visible="false" />
                            </RadzenLineSeries>
                        }

                        <RadzenCategoryAxis>
                            <RadzenTicks>
                                <Template>
                                    <text class="rz-tick-text" style="text-anchor: start; transform: translate(@(Math.Truncate(context.X))px, @(Math.Truncate(context.Y + 10))px) rotate(45deg)">@context.Value</text>
                                </Template>
                            </RadzenTicks>
                        </RadzenCategoryAxis>
                        <RadzenValueAxis Formatter="FormatAsDouble">
                            <RadzenGridLines Visible="true" />
                            <RadzenAxisTitle Text="Preis pro Artikel in €" />
                        </RadzenValueAxis>
                    </RadzenChart>

                    <MudStack Row="true" Reverse="true">
                        <MudTooltip Text="Diagramm zurücksetzen">
                            <MudFab OnClick="DeleteAllSeriesInChart" Color="Color.Secondary" StartIcon="@Icons.Material.Filled.Replay" Size="Size.Small" />
                        </MudTooltip>
                    </MudStack>

                </MudPaper>
            }
           
        
        </MudHidden>
        

        @* ---------- LEGEND ----------------------- *@
        <MudStack Row="true" Class="mt-4" Style="flex-wrap: wrap;" Spacing="2">
            <div style="display: flex; align-items: center; margin-right: 10px; color: gray;">
                <span style="color: gray; margin-left: 4px;">Legende:</span>
            </div>
            <div style="display: flex; align-items: center; margin-right: 10px;color: gray;">
                <MudIcon Icon="@Icons.Material.Filled.TrendingUp" />
                <span style="color: gray; margin-left: 4px;">Preissteigerung</span>
            </div>
            <div style="display: flex; align-items: center; margin-right: 10px;color: gray;">
                <MudIcon Icon="@Icons.Material.Filled.TrendingDown" />
                <span style="color: gray; margin-left: 4px;">Preissenkung</span>
            </div>
            <div style="display: flex; align-items: center;color: gray;">
                <MudIcon Icon="@Icons.Material.Filled.TrendingFlat" />
                <span style="color: gray; margin-left: 4px;">bisher keine Preisänderung</span>
            </div>
        </MudStack>

        @* ---------- MOBILE INFO ----------------------- *@

        <MudHidden Breakpoint="Breakpoint.Xs" Invert="true">
            <MudAlert Class="mt-4" Severity="Severity.Info">
                <MudIcon Icon="@Icons.Material.Filled.MobileOff"></MudIcon>
                <br/>
                Einige Details und die Diagramm-Funktion werden in der mobilen Ansicht aus Platz-Gründen ausgeblendet
            </MudAlert>
        </MudHidden>

        @* ---------- STORES ----------------------- *@
            <MudText Typo="Typo.h6" Color="Color.Secondary" Class="mb-4 mt-8">Gefundene Produkte:</MudText>

            <MudExpansionPanels MultiExpansion="true">

                @foreach (KeyValuePair<string, Dictionary<string, List<ProductChange>>> store in _productData)
                {
                    <MudExpansionPanel>
                        <TitleContent>
                            <div class="d-flex">
                                <MudIcon Icon="@Icons.Material.Filled.LocalGroceryStore" class="mr-3"></MudIcon>
                                <MudText><strong>@store.Key</strong> (@store.Value.Count() Produkte)</MudText>
                            </div>
                        </TitleContent>
                        <ChildContent>
                            <MudExpansionPanels MultiExpansion="true">

                                @* ---------- PRODUCTS ----------------------- *@

                                @foreach (KeyValuePair<string, List<ProductChange>> product in store.Value)
                                {
                                    <MudExpansionPanel>
                                        <TitleContent>
                                            <div class="d-flex align-center">
                                                @if (product.Value[product.Value.Count - 1].Trend == "up")
                                                {
                                                    <span style="color:red;"> <MudIcon Icon="@Icons.Material.Filled.TrendingUp" class="mr-3"></MudIcon></span>@product.Value[0].Name  
                                                    <MudText Typo="Typo.body2" Color="Color.Tertiary">
                                                    <MudHidden Breakpoint="Breakpoint.Xs" Invert="false">
                                                        &nbsp;[@product.Key.ToString()]
                                                    </MudHidden>
                                                    
                                                    
                                                </MudText>
                                                }
                                                else if (product.Value[product.Value.Count - 1].Trend == "down")
                                                {
                                                    <span style="color:green;"> <MudIcon Icon="@Icons.Material.Filled.TrendingDown" class="mr-3"></MudIcon></span>@product.Value[0].Name
                                                    <MudText Typo="Typo.body2" Color="Color.Tertiary">
                                                    <MudHidden Breakpoint="Breakpoint.Xs" Invert="false">
                                                        &nbsp;[@product.Key.ToString()]
                                                    </MudHidden>
                                                    </MudText>
                                                }
                                                else
                                                {
                                                    <span style="color:gray;"> <MudIcon Icon="@Icons.Material.Filled.TrendingFlat" class="mr-3"></MudIcon></span>  @product.Value[0].Name
                                                    <MudText Typo="Typo.body2" Color="Color.Tertiary">
                                                    <MudHidden Breakpoint="Breakpoint.Xs" Invert="false">
                                                        &nbsp;[@product.Key.ToString()]
                                                    </MudHidden>
                                                    </MudText>
                                                }
                                            </div>

                                        </TitleContent>
                                        <ChildContent>
                                            <MudGrid>
                                                <MudItem xs="10">
                                                    <ul>
                                                        @foreach (ProductChange productChange in product.Value)
                                                        {
                                                            <li>
                                                            <strong>@productChange.Date.ToString("dd/MM/yyyy"):</strong> @productChange.Price.ToString("N2")€ / Stk &nbsp; [@productChange.Baseprice.ToString("N2")€ /  @productChange.BasepriceUnit]
                                                            </li>
                                                        }
                                                    </ul>
                                                    
                                                    @if(product.Value.Count > 0){
                                                        <MudDivider Class="mt-4"/>
                                                        <MudLink Href="@product.Value[0].Url" Target="_blank">Zum WebShop</MudLink>
                                                    }
                                                    
                                                </MudItem>
                                                <MudHidden Breakpoint="Breakpoint.Xs" Invert="false">
                                                    <MudItem xs="2">

                                                        @if (_identifierInChart.Contains(product.Value[0].Identifier))
                                                        {
                                                            <MudTooltip Text="Aus Diagramm ausblenden">
                                                                <MudIconButton OnClick="() => AddProductToChart(product.Value[0].Name, store.Key, product.Value[0].Identifier)" Icon="@Icons.Material.Filled.MultilineChart" Variant="MudBlazor.Variant.Filled" Color="Color.Error" Size="Size.Medium" />
                                                            </MudTooltip>
                                                        }
                                                        else
                                                        {
                                                            <MudTooltip Text="Im Diagramm anzeigen">
                                                            <MudIconButton OnClick="() => AddProductToChart(product.Value[0].Name, store.Key, product.Value[0].Identifier)" Icon="@Icons.Material.Filled.StackedBarChart" Variant="MudBlazor.Variant.Filled" Color="Color.Secondary" Size="Size.Medium" />
                                                            </MudTooltip>

                                                        }

                                                        <MudTooltip Text="Detailansicht öffnen">
                                                            <MudIconButton Class="ml-2" Href=@($"/product/{product.Value[0].Store}/{product.Value[0].Name}-{product.Value[0].Identifier}") Icon="@Icons.Material.Filled.RemoveRedEye" Variant="MudBlazor.Variant.Filled" Color="Color.Secondary" Size="Size.Medium" />
                                                        </MudTooltip>
                                                    </MudItem>
                                                </MudHidden>
                                            </MudGrid>
                                        </ChildContent>
                                    </MudExpansionPanel>
                                }
                            </MudExpansionPanels>
                        </ChildContent>
                    </MudExpansionPanel>
                }

        </MudExpansionPanels>

    }   
    else
    {
        @if (!_isSearching)
        {
            <MudPaper Class="pa-16 ma-2" Elevation="3">
                <MudText>Keine Ergebnisse.</MudText>
            </MudPaper>
        }
      
    }
}